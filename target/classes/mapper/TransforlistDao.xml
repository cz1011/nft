<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shitouren.core.autogenerate.dao.TransforlistDao">
  <resultMap id="BaseResultMap" type="com.shitouren.core.autogenerate.bean.Transforlist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="colid" jdbcType="INTEGER" property="colid" />
    <result column="transactionHash" jdbcType="VARCHAR" property="transactionhash" />
    <result column="thaddress" jdbcType="VARCHAR" property="thaddress" />
    <result column="thtokenId" jdbcType="INTEGER" property="thtokenid" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, colid, transactionHash, thaddress, thtokenId, state
  </sql>
  <select id="selectByExample" parameterType="com.shitouren.core.autogenerate.bean.TransforlistExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transforlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transforlist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transforlist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shitouren.core.autogenerate.bean.TransforlistExample">
    delete from transforlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Transforlist" useGeneratedKeys="true">
    insert into transforlist (colid, transactionHash, thaddress, 
      thtokenId, state)
    values (#{colid,jdbcType=INTEGER}, #{transactionhash,jdbcType=VARCHAR}, #{thaddress,jdbcType=VARCHAR}, 
      #{thtokenid,jdbcType=INTEGER}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Transforlist" useGeneratedKeys="true">
    insert into transforlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="colid != null">
        colid,
      </if>
      <if test="transactionhash != null">
        transactionHash,
      </if>
      <if test="thaddress != null">
        thaddress,
      </if>
      <if test="thtokenid != null">
        thtokenId,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="colid != null">
        #{colid,jdbcType=INTEGER},
      </if>
      <if test="transactionhash != null">
        #{transactionhash,jdbcType=VARCHAR},
      </if>
      <if test="thaddress != null">
        #{thaddress,jdbcType=VARCHAR},
      </if>
      <if test="thtokenid != null">
        #{thtokenid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shitouren.core.autogenerate.bean.TransforlistExample" resultType="java.lang.Long">
    select count(*) from transforlist
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transforlist
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.colid != null">
        colid = #{record.colid,jdbcType=INTEGER},
      </if>
      <if test="record.transactionhash != null">
        transactionHash = #{record.transactionhash,jdbcType=VARCHAR},
      </if>
      <if test="record.thaddress != null">
        thaddress = #{record.thaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.thtokenid != null">
        thtokenId = #{record.thtokenid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transforlist
    set id = #{record.id,jdbcType=INTEGER},
      colid = #{record.colid,jdbcType=INTEGER},
      transactionHash = #{record.transactionhash,jdbcType=VARCHAR},
      thaddress = #{record.thaddress,jdbcType=VARCHAR},
      thtokenId = #{record.thtokenid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shitouren.core.autogenerate.bean.Transforlist">
    update transforlist
    <set>
      <if test="colid != null">
        colid = #{colid,jdbcType=INTEGER},
      </if>
      <if test="transactionhash != null">
        transactionHash = #{transactionhash,jdbcType=VARCHAR},
      </if>
      <if test="thaddress != null">
        thaddress = #{thaddress,jdbcType=VARCHAR},
      </if>
      <if test="thtokenid != null">
        thtokenId = #{thtokenid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shitouren.core.autogenerate.bean.Transforlist">
    update transforlist
    set colid = #{colid,jdbcType=INTEGER},
      transactionHash = #{transactionhash,jdbcType=VARCHAR},
      thaddress = #{thaddress,jdbcType=VARCHAR},
      thtokenId = #{thtokenid,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into transforlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].id!=null">
        id,
      </if>
      <if test="list[0].colid!=null">
        colid,
      </if>
      <if test="list[0].transactionhash!=null">
        transactionHash,
      </if>
      <if test="list[0].thaddress!=null">
        thaddress,
      </if>
      <if test="list[0].thtokenid!=null">
        thtokenId,
      </if>
      <if test="list[0].state!=null">
        state,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.colid!=null">
          #{item.colid,jdbcType=INTEGER},
        </if>
        <if test="item.transactionhash!=null">
          #{item.transactionhash,jdbcType=VARCHAR},
        </if>
        <if test="item.thaddress!=null">
          #{item.thaddress,jdbcType=VARCHAR},
        </if>
        <if test="item.thtokenid!=null">
          #{item.thtokenid,jdbcType=INTEGER},
        </if>
        <if test="item.state!=null">
          #{item.state,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update transforlist
      <set>
        <if test="item.colid!=null">
          colid=#{item.colid,jdbcType=INTEGER},
        </if>
        <if test="item.transactionhash!=null">
          transactionHash=#{item.transactionhash,jdbcType=VARCHAR},
        </if>
        <if test="item.thaddress!=null">
          thaddress=#{item.thaddress,jdbcType=VARCHAR},
        </if>
        <if test="item.thtokenid!=null">
          thtokenId=#{item.thtokenid,jdbcType=INTEGER},
        </if>
        <if test="item.state!=null">
          state=#{item.state,jdbcType=INTEGER},
        </if>
      </set>
      where 
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>