<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shitouren.core.autogenerate.dao.BankDao">
  <resultMap id="BaseResultMap" type="com.shitouren.core.autogenerate.bean.Bank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="accountNo" jdbcType="VARCHAR" property="accountno" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idCardCode" jdbcType="VARCHAR" property="idcardcode" />
    <result column="bankPreMobile" jdbcType="VARCHAR" property="bankpremobile" />
    <result column="bankname" jdbcType="VARCHAR" property="bankname" />
    <result column="cardid" jdbcType="VARCHAR" property="cardid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, accountNo, name, idCardCode, bankPreMobile, bankname, cardid
  </sql>
  <select id="selectByExample" parameterType="com.shitouren.core.autogenerate.bean.BankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shitouren.core.autogenerate.bean.BankExample">
    delete from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Bank" useGeneratedKeys="true">
    insert into bank (uid, accountNo, name, 
      idCardCode, bankPreMobile, bankname, 
      cardid)
    values (#{uid,jdbcType=INTEGER}, #{accountno,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{idcardcode,jdbcType=VARCHAR}, #{bankpremobile,jdbcType=VARCHAR}, #{bankname,jdbcType=VARCHAR}, 
      #{cardid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shitouren.core.autogenerate.bean.Bank" useGeneratedKeys="true">
    insert into bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="accountno != null">
        accountNo,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcardcode != null">
        idCardCode,
      </if>
      <if test="bankpremobile != null">
        bankPreMobile,
      </if>
      <if test="bankname != null">
        bankname,
      </if>
      <if test="cardid != null">
        cardid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="accountno != null">
        #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardcode != null">
        #{idcardcode,jdbcType=VARCHAR},
      </if>
      <if test="bankpremobile != null">
        #{bankpremobile,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="cardid != null">
        #{cardid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shitouren.core.autogenerate.bean.BankExample" resultType="java.lang.Long">
    select count(*) from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.accountno != null">
        accountNo = #{record.accountno,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardcode != null">
        idCardCode = #{record.idcardcode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankpremobile != null">
        bankPreMobile = #{record.bankpremobile,jdbcType=VARCHAR},
      </if>
      <if test="record.bankname != null">
        bankname = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.cardid != null">
        cardid = #{record.cardid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      accountNo = #{record.accountno,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      idCardCode = #{record.idcardcode,jdbcType=VARCHAR},
      bankPreMobile = #{record.bankpremobile,jdbcType=VARCHAR},
      bankname = #{record.bankname,jdbcType=VARCHAR},
      cardid = #{record.cardid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shitouren.core.autogenerate.bean.Bank">
    update bank
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="accountno != null">
        accountNo = #{accountno,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardcode != null">
        idCardCode = #{idcardcode,jdbcType=VARCHAR},
      </if>
      <if test="bankpremobile != null">
        bankPreMobile = #{bankpremobile,jdbcType=VARCHAR},
      </if>
      <if test="bankname != null">
        bankname = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="cardid != null">
        cardid = #{cardid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shitouren.core.autogenerate.bean.Bank">
    update bank
    set uid = #{uid,jdbcType=INTEGER},
      accountNo = #{accountno,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      idCardCode = #{idcardcode,jdbcType=VARCHAR},
      bankPreMobile = #{bankpremobile,jdbcType=VARCHAR},
      bankname = #{bankname,jdbcType=VARCHAR},
      cardid = #{cardid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].id!=null">
        id,
      </if>
      <if test="list[0].uid!=null">
        uid,
      </if>
      <if test="list[0].accountno!=null">
        accountNo,
      </if>
      <if test="list[0].name!=null">
        name,
      </if>
      <if test="list[0].idcardcode!=null">
        idCardCode,
      </if>
      <if test="list[0].bankpremobile!=null">
        bankPreMobile,
      </if>
      <if test="list[0].bankname!=null">
        bankname,
      </if>
      <if test="list[0].cardid!=null">
        cardid,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.uid!=null">
          #{item.uid,jdbcType=INTEGER},
        </if>
        <if test="item.accountno!=null">
          #{item.accountno,jdbcType=VARCHAR},
        </if>
        <if test="item.name!=null">
          #{item.name,jdbcType=VARCHAR},
        </if>
        <if test="item.idcardcode!=null">
          #{item.idcardcode,jdbcType=VARCHAR},
        </if>
        <if test="item.bankpremobile!=null">
          #{item.bankpremobile,jdbcType=VARCHAR},
        </if>
        <if test="item.bankname!=null">
          #{item.bankname,jdbcType=VARCHAR},
        </if>
        <if test="item.cardid!=null">
          #{item.cardid,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update bank
      <set>
        <if test="item.uid!=null">
          uid=#{item.uid,jdbcType=INTEGER},
        </if>
        <if test="item.accountno!=null">
          accountNo=#{item.accountno,jdbcType=VARCHAR},
        </if>
        <if test="item.name!=null">
          name=#{item.name,jdbcType=VARCHAR},
        </if>
        <if test="item.idcardcode!=null">
          idCardCode=#{item.idcardcode,jdbcType=VARCHAR},
        </if>
        <if test="item.bankpremobile!=null">
          bankPreMobile=#{item.bankpremobile,jdbcType=VARCHAR},
        </if>
        <if test="item.bankname!=null">
          bankname=#{item.bankname,jdbcType=VARCHAR},
        </if>
        <if test="item.cardid!=null">
          cardid=#{item.cardid,jdbcType=VARCHAR},
        </if>
      </set>
      where 
      id = #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>